<?xml version="1.0"?>
<robot name="galileo" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <gazebo>
        <plugin filename="libgazebo_ros_control.so" name="control"/>
    </gazebo>

    <xacro:property name="body_color" value="Gazebo/Orange"/>
    <xacro:property name="wheel_color" value="Gazebo/Black"/>
    <xacro:property name="bogie_color" value="Gazebo/White"/>
    <xacro:property name="camera_color" value="Gazebo/White"/>
    <xacro:property name="antenna_color" value="Gazebo/White"/>
    <xacro:property name="lidar_color" value="Gazebo/Blue"/>
  
    <gazebo reference="base_link">
        <material>${body_color}</material>
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <selfCollide>true</selfCollide>
        <gravity>true</gravity>
    </gazebo>

    <gazebo reference="left_bogie">
        <material>${bogie_color}</material>
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <selfCollide>true</selfCollide>
    </gazebo>

    <gazebo reference="right_bogie">
        <material>${bogie_color}</material>
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <selfCollide>true</selfCollide>
    </gazebo>

    <gazebo reference="left_front_wheel">
        <material>${wheel_color}</material>
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <selfCollide>true</selfCollide>
    </gazebo>

    <gazebo reference="left_rear_wheel">
        <material>${wheel_color}</material>
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <selfCollide>true</selfCollide>
    </gazebo>

    <gazebo reference="right_rear_wheel">
        <material>${wheel_color}</material>
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <selfCollide>true</selfCollide>
        <gravity>true</gravity>
    </gazebo>

    <gazebo reference="right_front_wheel">
        <material>${wheel_color}</material>
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <selfCollide>true</selfCollide>
    </gazebo>

    <gazebo reference="camera_link">
        <material>${camera_color}</material>
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <selfCollide>true</selfCollide>
    </gazebo>

    <gazebo reference="antenna">
        <material>${antenna_color}</material>
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <selfCollide>true</selfCollide>
    </gazebo>
    
    <gazebo reference="anveshak_logo">
        <material>${camera_color}</material>
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <selfCollide>true</selfCollide>
    </gazebo>

    <gazebo reference="lidar_link">
        <material>${lidar_color}</material>
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <selfCollide>true</selfCollide>
    </gazebo>

    <gazebo>
        <plugin name="galileo_drive_controller" filename='libgazebo_ros_skid_steer_drive.so'>
            <updateRate>20</updateRate>
            <robotNamespace></robotNamespace>
            <alwaysOn>1</alwaysOn>
            
            <leftFrontJoint>left_front_wheel_joint</leftFrontJoint>
            <rightFrontJoint>right_front_wheel_joint</rightFrontJoint>
            <leftRearJoint>left_rear_wheel_joint</leftRearJoint>
            <rightRearJoint>right_rear_wheel_joint</rightRearJoint>
            
            <wheelSeperation>0.54</wheelSeperation>
            <wheelDiameter>0.24</wheelDiameter>
            <torque>30</torque>
            
            <commandTopic>galileo/cmd_vel</commandTopic>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <robotBaseFrame>base_footprint</robotBaseFrame>
            <broadcastTF>1</broadcastTF>
            <publishTf>1</publishTf>
            
            <covariance_x>0.001</covariance_x>
            <covariance_y>0.001</covariance_y>
            <covariance_yaw>0.01</covariance_yaw>
        </plugin>
        <!--plugin name='differential_drive_controller' filename='libgazebo_ros_diff_drive.so'>
      		<legacyMode>1</legacyMode>
      		<rosDebugLevel>Debug</rosDebugLevel>
      		<publishWheelTF>0</publishWheelTF>
      		<robotNamespace>/</robotNamespace>
      		<publishTf>1</publishTf>
      		<publishWheelJointState>0</publishWheelJointState>
      		<alwaysOn>1</alwaysOn>
      		<updateRate>20.0</updateRate>
      		<leftJoint>left_rear_wheel_joint</leftJoint>
      		<rightJoint>right_rear_wheel_joint</rightJoint>
      		<wheelSeparation>0.4</wheelSeparation>
      		<wheelDiameter>0.2</wheelDiameter>
      		<broadcastTF>1</broadcastTF>
      		<wheelTorque>20</wheelTorque>
      		<wheelAcceleration>2.0</wheelAcceleration>
      		<commandTopic>galileo/cmd_vel</commandTopic>
      		<odometryFrame>odom</odometryFrame>
      		<odometryTopic>odom</odometryTopic>
      		<robotBaseFrame>base_footprint</robotBaseFrame>
    	</plugin-->
    </gazebo>

    <gazebo reference="camera_link">
        <sensor type="depth" name="depth_camera">
            <update_rate>30.0</update_rate>
            <visualize>true</visualize>
            <camera>
                <horizontal_fov>1.089</horizontal_fov>
                <image>
                    <width>1280</width>
                    <height>720</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.05</near>
                    <far>20</far>
                </clip>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
                <robotNamespace>/</robotNamespace>
                <alwaysOn>true</alwaysOn>
                <updateRate>30.0</updateRate>
                <imageTopicName>intel/color/image_raw</imageTopicName>
                <cameraInfoTopicName>intel/color/camera_info</cameraInfoTopicName>
                <depthImageTopicName>intel/depth/image_raw</depthImageTopicName>
                <depthImageInfoTopicName>intel/depth/camera_info</depthImageInfoTopicName>
                <pointCloudTopicName>intel/depth/points</pointCloudTopicName>
                <frameName>camera_link_optical</frameName>
                <pointCloudCutoff>0.05</pointCloudCutoff>
                <distortionK1>0</distortionK1>
                <distortionK2>0</distortionK2>
                <distortionK3>0</distortionK3>
                <distortionT1>0</distortionT1>
                <distortionT2>0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

    <gazebo reference="lidar_link">
        <sensor type="ray" name="laser">
            <pose>0 0 0 0 0 0</pose>
            <visualize>false</visualize>
            <update_rate>100</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>720</samples>
                        <resolution>1</resolution>
                        <min_angle>-1.9</min_angle>
                        <max_angle>1.9</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.10</min>
                    <max>8.0</max>
                    <resolution>0.01</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
                <topicName>galileo/laser_scan</topicName>
                <frameName>lidar_link</frameName>
            </plugin>
        </sensor>

    </gazebo>

    <gazebo reference="imu_link">
        <gravity>true</gravity>
        <sensor name="imu_sensor" type="imu">
          <always_on>true</always_on>
          <update_rate>40</update_rate>
          <visualize>true</visualize>
          <topic>__default_topic__</topic>
          <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
            <topicName>galileo/imu</topicName>
            <bodyName>imu_link</bodyName>
            <updateRateHZ>10.0</updateRateHZ>
            <gaussianNoise>0.0</gaussianNoise>
            <xyzOffset>0 0 0</xyzOffset>
            <rpyOffset>0 0 0</rpyOffset>
            <frameName>imu_link</frameName>
            <initialOrientationAsReference>false</initialOrientationAsReference>
          </plugin>
          <pose>0 0 0 0 0 0</pose>
        </sensor>
    </gazebo>

    <!--Set Reference GPS Latitude and Longitude Before Starting the Rover-->
    <gazebo>
        <plugin name="gazebo_ros_gps" filename="libhector_gazebo_ros_gps.so">
          <updateRate>4.0</updateRate>
          <bodyName>gps_link</bodyName>
          <frameId>gps_link</frameId>
          <topicName>/galileo/gps/fix</topicName>
          <velocityTopicName>/galileo/gps/fix_velocity</velocityTopicName>
          <referenceLatitude>-30.06022459407145675</referenceLatitude>
          <referenceLongitude>-51.173913575780311191</referenceLongitude>
          <referenceHeading>90</referenceHeading>
          <referenceAltitude>10</referenceAltitude>
          <offset>0 0 0</offset>
          <drift>0.001 0.001 0.001</drift>
          <gaussianNoise>0.05 0.05 0.05</gaussianNoise>
          <velocityDrift>0.001 0.001 0.001</velocityDrift>
          <velocityGaussianNoise>0.5 0.5 0.5</velocityGaussianNoise>
        </plugin>
    </gazebo>
    
</robot>
